{"version":3,"sources":["webpack:///./scripts/components/SizeSelector/SizeSelector.container.jsx","webpack:///./scripts/components/SizeSelector/index.js","webpack:///./scripts/components/SizeSelector/util/processText.js","webpack:///./scripts/components/TileSelector/TileSelector.jsx","webpack:///./scripts/components/TileSelector/index.js","webpack:///./scripts/presentational/Select/Select.jsx","webpack:///./scripts/presentational/Select/index.js"],"names":["SizeSelectorContainer","preselectedSize","sizes","shouldRenderTiles","pdpService","useState","selectedSize","setSelectedSize","getSizesWithoutPriceAndStockValues","sizeList","shouldProcessText","map","text","price","stock","rest","processText","parsedSizes","useMemo","getSizeEntry","sizeValue","find","value","useEffect","setSize","onSelectSize","selectedSizeValue","propTypes","PropTypes","string","isRequired","arrayOf","shape","selectable","bool","func","TileSelector","props","onClick","data","selectedTile","handleClickTile","event","selectedTileNode","target","classList","contains","getAttribute","tiles","tile","selected","defaultProps","Select","name","label","required","disabled","placeholder","options","selectedValue","onSelect","handleChange","e","renderLabel","renderPlaceholder","renderOptions","renderSelect","option"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,OAExB;AAAA,MADJC,eACI,QADJA,eACI;AAAA,MADaC,KACb,QADaA,KACb;AAAA,MADoBC,iBACpB,QADoBA,iBACpB;AAAA,MADuCC,UACvC,QADuCA,UACvC;;AAAA,kBACoCC,uDAAQ,CAACJ,eAAD,CAD5C;AAAA;AAAA,MACGK,YADH;AAAA,MACiBC,eADjB;;AAGJ,MAAMC,kCAAkC,GAAG,SAArCA,kCAAqC,CAACC,QAAD,EAAWC,iBAAX;AAAA,WAAiCD,QAAQ,CACjFE,GADyE,CACrE;AAAA,UACHC,IADG,SACHA,IADG;AAAA,UACGC,KADH,SACGA,KADH;AAAA,UACUC,KADV,SACUA,KADV;AAAA,UACoBC,IADpB;;AAAA,+BAGAA,IAHA;AAIHH,YAAI,EAAEF,iBAAiB,GAAGM,sEAAW,CAAC;AAAEJ,cAAI,EAAJA,IAAF;AAAQC,eAAK,EAALA,KAAR;AAAeC,eAAK,EAALA;AAAf,SAAD,CAAd,GAAyCF;AAJ7D;AAAA,KADqE,CAAjC;AAAA,GAA3C;;AAQA,MAAMK,WAAW,GAAGC,sDAAO,CAAC;AAAA,WAAMV,kCAAkC,CAACN,KAAD,EAAQ,CAACC,iBAAT,CAAxC;AAAA,GAAD,EAAsE,CAACD,KAAD,EAAQC,iBAAR,CAAtE,CAA3B;;AAEA,MAAMgB,YAAY,GAAG,SAAfA,YAAe,CAACV,QAAD,EAAWW,SAAX;AAAA,WAAyBX,QAAQ,CAACY,IAAT,CAAc;AAAA,UAAGC,KAAH,SAAGA,KAAH;AAAA,aAAeA,KAAK,KAAKF,SAAzB;AAAA,KAAd,CAAzB;AAAA,GAArB;;AAEAG,0DAAS,CAAC,YAAM;AACd,QAAItB,eAAJ,EAAqB;AAAA,0BACYkB,YAAY,CAACjB,KAAD,EAAQD,eAAR,CADxB;AAAA,UACXW,IADW,iBACXA,IADW;AAAA,UACLC,KADK,iBACLA,KADK;AAAA,UACEC,KADF,iBACEA,KADF;;AAEnBV,gBAAU,CAACoB,OAAX,CAAmBvB,eAAnB,EAAoCe,sEAAW,CAAC;AAAEJ,YAAI,EAAJA,IAAF;AAAQC,aAAK,EAALA,KAAR;AAAeC,aAAK,EAALA;AAAf,OAAD,CAA/C;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAOA,MAAMW,YAAY,GAAG,SAAfA,YAAe,CAACC,iBAAD,EAAuB;AAC1CnB,mBAAe,CAACmB,iBAAD,CAAf;;AAD0C,yBAEXP,YAAY,CAACjB,KAAD,EAAQwB,iBAAR,CAFD;AAAA,QAElCd,IAFkC,kBAElCA,IAFkC;AAAA,QAE5BC,KAF4B,kBAE5BA,KAF4B;AAAA,QAErBC,KAFqB,kBAErBA,KAFqB;;AAG1CV,cAAU,CAACoB,OAAX,CAAmBE,iBAAnB,EAAsCV,sEAAW,CAAC;AAAEJ,UAAI,EAAJA,IAAF;AAAQC,WAAK,EAALA,KAAR;AAAeC,WAAK,EAALA;AAAf,KAAD,CAAjD;AACD,GAJD;;AAMA,SAAOX,iBAAiB,GACnB,4DAAC,sDAAD;AAAO,mBAAY,OAAnB;AAA2B,gBAAY,EAAEG,YAAzC;AAAuD,QAAI,EAAEW,WAA7D;AAA0E,WAAO,EAAEQ;AAAnF,IADmB,GAEnB,4DAAC,+DAAD;AAAQ,mBAAY,QAApB;AAA6B,QAAI,EAAC,aAAlC;AAAgD,SAAK,EAAEnB,YAAvD;AAAqE,WAAO,EAAEW,WAA9E;AAA2F,YAAQ,EAAEQ;AAArG,IAFL;AAGD,CAjCD;;AAmCAzB,qBAAqB,CAAC2B,SAAtB,GAAkC;AAChC1B,iBAAe,EAAE2B,kDAAS,CAACC,MAAV,CAAiBC,UADF;AAEhC5B,OAAK,EAAE0B,kDAAS,CAACG,OAAV,CAAkBH,kDAAS,CAACI,KAAV,CAAgB;AACvCV,SAAK,EAAEM,kDAAS,CAACC,MAAV,CAAiBC,UADe;AAEvClB,QAAI,EAAEgB,kDAAS,CAACC,MAAV,CAAiBC,UAFgB;AAGvCG,cAAU,EAAEL,kDAAS,CAACM,IAAV,CAAeJ;AAHY,GAAhB,CAAlB,EAIHA,UAN4B;AAOhC3B,mBAAiB,EAAEyB,kDAAS,CAACM,IAAV,CAAeJ,UAPF;AAQhC1B,YAAU,EAAEwB,kDAAS,CAACI,KAAV,CAAgB;AAC1BR,WAAO,EAAEI,kDAAS,CAACO,IAAV,CAAeL;AADE,GAAhB,EAETA;AAV6B,CAAlC;AAae9B,oFAAf,E;;;;;;;;;;;;ACtDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACAO,IAAMgB,WAAW,GAAG,SAAdA,WAAc;AAAA,uBAAGJ,IAAH;AAAA,MAAGA,IAAH,0BAAU,EAAV;AAAA,wBAAcC,KAAd;AAAA,MAAcA,KAAd,2BAAsB,EAAtB;AAAA,wBAA0BC,KAA1B;AAAA,MAA0BA,KAA1B,2BAAkC,EAAlC;AAAA,mBAA8CF,IAA9C,SAAqDC,KAAK,eAAQA,KAAR,CAA1D,SAA4EC,KAAK,eAAQA,KAAR,CAAjF;AAAA,CAApB,C;;;;;;;;;;;;;;;;;;;;;;;ACAP;AACA;;AAEA,IAAMsB,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,MACtBC,OADsB,GACUD,KADV,CACtBC,OADsB;AAAA,MACbC,IADa,GACUF,KADV,CACbE,IADa;AAAA,MACPC,YADO,GACUH,KADV,CACPG,YADO;;AAG9B,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,QAAMC,gBAAgB,GAAGD,KAAK,CAACE,MAA/B;;AACA,QAAID,gBAAgB,CAACE,SAAjB,CAA2BC,QAA3B,CAAoC,YAApC,CAAJ,EAAuD;AACrDR,aAAO,CAACK,gBAAgB,CAACI,YAAjB,CAA8B,YAA9B,CAAD,CAAP;AACD;AACF,GALD;;AAOA,MAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,WACZT,IAAI,CAAC5B,GAAL,CAAS,UAACsC,IAAD,EAAU;AACjB,UAAMhB,UAAU,GAAGgB,IAAI,CAAChB,UAAL,GAAkB,YAAlB,GAAiC,UAApD;AACA,UAAMiB,QAAQ,GAAGD,IAAI,CAAC3B,KAAL,KAAekB,YAAf,GAA8B,UAA9B,GAA2C,EAA5D;AACA,aACE;AACE,uBAAY,MADd;AAEE,eAAO,EAAEC,eAFX;AAGE,WAAG,EAAEQ,IAAI,CAAC3B,KAHZ;AAIE,sBAAY2B,IAAI,CAAC3B,KAJnB;AAKE,iBAAS,8CAAuCW,UAAvC,cAAqDiB,QAArD;AALX,SAOGD,IAAI,CAACrC,IAPR,CADF;AAWD,KAdD,CADY;AAAA,GAAd;;AAkBA,SACE;AAAK,aAAS,EAAC;AAAf,KAA6FoC,KAAK,EAAlG,CADF;AAGD,CA/BD;;AAiCAZ,YAAY,CAACe,YAAb,GAA4B;AAC1Bb,SAAO,EAAE,IADiB;AAE1BE,cAAY,EAAE,EAFY;AAG1BD,MAAI,EAAE;AAHoB,CAA5B;AAMA,IAAMU,IAAI,GAAGrB,iDAAS,CAACI,KAAV,CAAgB;AAC3BV,OAAK,EAAEM,iDAAS,CAACC,MAAV,CAAiBC,UADG;AAE3BlB,MAAI,EAAEgB,iDAAS,CAACC,MAAV,CAAiBC,UAFI;AAG3BG,YAAU,EAAEL,iDAAS,CAACM;AAHK,CAAhB,CAAb;AAMAE,YAAY,CAACT,SAAb,GAAyB;AACvBW,SAAO,EAAEV,iDAAS,CAACO,IADI;AAEvBK,cAAY,EAAEZ,iDAAS,CAACC,MAFD;AAGvBU,MAAI,EAAEX,iDAAS,CAACG,OAAV,CAAkBkB,IAAlB;AAHiB,CAAzB;AAKeb,2EAAf,E;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;;AAEA,IAAMgB,MAAM,GAAG,SAATA,MAAS,CAACf,KAAD,EAAW;AAAA,MAEtBgB,IAFsB,GAGpBhB,KAHoB,CAEtBgB,IAFsB;AAAA,MAEhBC,KAFgB,GAGpBjB,KAHoB,CAEhBiB,KAFgB;AAAA,MAETC,QAFS,GAGpBlB,KAHoB,CAETkB,QAFS;AAAA,MAECC,QAFD,GAGpBnB,KAHoB,CAECmB,QAFD;AAAA,MAEWC,WAFX,GAGpBpB,KAHoB,CAEWoB,WAFX;AAAA,MAEwBC,OAFxB,GAGpBrB,KAHoB,CAEwBqB,OAFxB;AAAA,MAEwCC,aAFxC,GAGpBtB,KAHoB,CAEiCf,KAFjC;AAAA,MAEuDsC,QAFvD,GAGpBvB,KAHoB,CAEuDuB,QAFvD;;AAKxB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAO;AAC1B,QAAIF,QAAJ,EAAc;AACZA,cAAQ,CAACE,CAAC,CAAClB,MAAF,CAAStB,KAAV,CAAR;AACD;AACF,GAJD;;AAKA,MAAMyC,WAAW,GAAG,SAAdA,WAAc;AAAA,WAClB;AAAO,qBAAY,OAAnB;AAA2B,aAAO,EAAEV,IAApC;AAA0C,eAAS,EAAC;AAApD,OACGC,KADH,EAEGC,QAAQ,IACP;AACE,qBAAY,oBADd;AAEE,eAAS,EAAC,kBAFZ;AAGE,qBAAY;AAHd,WAHJ,CADkB;AAAA,GAApB;;AAcA,MAAMS,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WAAM;AAAQ,qBAAY,aAApB;AAAkC,WAAK,EAAC,EAAxC;AAA2C,cAAQ;AAAnD,OAAqDP,WAArD,CAAN;AAAA,GAA1B;;AACA,MAAMQ,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WAAMP,OAAO,CAAC/C,GAAR,CAAY;AAAA,UAAGW,KAAH,QAAGA,KAAH;AAAA,UAAUV,IAAV,QAAUA,IAAV;AAAA,iCAAgBqB,UAAhB;AAAA,UAAgBA,UAAhB,gCAA6B,IAA7B;AAAA,aACtC;AACE,WAAG,EAAEX,KADP;AAEE,uBAAY,QAFd;AAGE,aAAK,EAAEA,KAHT;AAIE,gBAAQ,EAAE,CAACW;AAJb,SAMGrB,IANH,CADsC;AAAA,KAAZ,CAAN;AAAA,GAAtB;;AAUA,MAAMsD,YAAY,GAAG,SAAfA,YAAe;AAAA,WACnB;AACE,QAAE,EAAEb,IADN;AAEE,qBAAY,QAFd;AAGE,UAAI,EAAEA,IAHR;AAIE,cAAQ,EAAEE,QAJZ;AAKE,WAAK,EAAEI,aAAa,IAAI,EAL1B;AAME,cAAQ,EAAEH,QANZ;AAOE,cAAQ,EAAEK,YAPZ;AAQE,eAAS,EAAC;AARZ,OAUGG,iBAAiB,EAVpB,EAWGC,aAAa,EAXhB,CADmB;AAAA,GAArB;;AAgBA,SACE;AAAK,aAAS,EAAC;AAAf,KACGF,WAAW,EADd,EAEGG,YAAY,EAFf,CADF;AAMD,CAzDD;;AA2DAd,MAAM,CAACD,YAAP,GAAsB;AACpBE,MAAI,EAAE,EADc;AAEpBC,OAAK,EAAE,EAFa;AAGpBC,UAAQ,EAAE,KAHU;AAIpBC,UAAQ,EAAE,KAJU;AAKpBC,aAAW,EAAE,eALO;AAMpBnC,OAAK,EAAE,EANa;AAOpBoC,SAAO,EAAE,EAPW;AAQpBE,UAAQ,EAAE;AARU,CAAtB;AAWA,IAAMO,MAAM,GAAGvC,iDAAS,CAACI,KAAV,CAAgB;AAC7BV,OAAK,EAAEM,iDAAS,CAACC,MAAV,CAAiBC,UADK;AAE7BlB,MAAI,EAAEgB,iDAAS,CAACC,MAAV,CAAiBC,UAFM;AAG7BG,YAAU,EAAEL,iDAAS,CAACM;AAHO,CAAhB,CAAf;AAMAkB,MAAM,CAACzB,SAAP,GAAmB;AACjB0B,MAAI,EAAEzB,iDAAS,CAACC,MADC;AAEjByB,OAAK,EAAE1B,iDAAS,CAACC,MAFA;AAGjB0B,UAAQ,EAAE3B,iDAAS,CAACM,IAHH;AAIjBsB,UAAQ,EAAE5B,iDAAS,CAACM,IAJH;AAKjBuB,aAAW,EAAE7B,iDAAS,CAACC,MALN;AAMjBP,OAAK,EAAEM,iDAAS,CAACC,MANA;AAOjB6B,SAAO,EAAE9B,iDAAS,CAACG,OAAV,CAAkBoC,MAAlB,CAPQ;AAQjBP,UAAQ,EAAEhC,iDAAS,CAACO;AARH,CAAnB;AAWeiB,qEAAf,E;;;;;;;;;;;;AC1FA;AAAA;AAAA;AAAA","file":"SizeSelector.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Tiles from '../TileSelector';\nimport Select from '../../presentational/Select';\nimport { processText } from './util/processText';\n\nconst SizeSelectorContainer = ({\n  preselectedSize, sizes, shouldRenderTiles, pdpService\n}) => {\n  const [selectedSize, setSelectedSize] = useState(preselectedSize);\n\n  const getSizesWithoutPriceAndStockValues = (sizeList, shouldProcessText) => sizeList\n    .map(({\n      text, price, stock, ...rest\n    }) => ({\n      ...rest,\n      text: shouldProcessText ? processText({ text, price, stock }) : text\n    }));\n\n  const parsedSizes = useMemo(() => getSizesWithoutPriceAndStockValues(sizes, !shouldRenderTiles), [sizes, shouldRenderTiles]);\n\n  const getSizeEntry = (sizeList, sizeValue) => sizeList.find(({ value }) => value === sizeValue);\n\n  useEffect(() => {\n    if (preselectedSize) {\n      const { text, price, stock } = getSizeEntry(sizes, preselectedSize);\n      pdpService.setSize(preselectedSize, processText({ text, price, stock }));\n    }\n  }, []);\n\n  const onSelectSize = (selectedSizeValue) => {\n    setSelectedSize(selectedSizeValue);\n    const { text, price, stock } = getSizeEntry(sizes, selectedSizeValue);\n    pdpService.setSize(selectedSizeValue, processText({ text, price, stock }));\n  };\n\n  return shouldRenderTiles\n    ? (<Tiles data-testid='tiles' selectedTile={selectedSize} data={parsedSizes} onClick={onSelectSize} />)\n    : (<Select data-testid='select' name='select-size' value={selectedSize} options={parsedSizes} onSelect={onSelectSize} />);\n};\n\nSizeSelectorContainer.propTypes = {\n  preselectedSize: PropTypes.string.isRequired,\n  sizes: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    selectable: PropTypes.bool.isRequired\n  })).isRequired,\n  shouldRenderTiles: PropTypes.bool.isRequired,\n  pdpService: PropTypes.shape({\n    setSize: PropTypes.func.isRequired\n  }).isRequired\n};\n\nexport default SizeSelectorContainer;\n","export { default } from './SizeSelector.container';\n","export const processText = ({ text = '', price = '', stock = '' }) => `${text}${price && ` ${price}`}${stock && ` ${stock}`}`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TileSelector = (props) => {\n  const { onClick, data, selectedTile } = props;\n\n  const handleClickTile = (event) => {\n    const selectedTileNode = event.target;\n    if (selectedTileNode.classList.contains('selectable')) {\n      onClick(selectedTileNode.getAttribute('data-value'));\n    }\n  };\n\n  const tiles = () => (\n    data.map((tile) => {\n      const selectable = tile.selectable ? 'selectable' : 'disabled';\n      const selected = tile.value === selectedTile ? 'selected' : '';\n      return (\n        <div\n          data-testid='tile'\n          onClick={handleClickTile}\n          key={tile.value}\n          data-value={tile.value}\n          className={`tile ln-u-border ln-u-push-bottom ${selectable} ${selected}`}\n        >\n          {tile.text}\n        </div>\n      );\n    })\n  );\n\n  return (\n    <div className='tu-c-tile-selector ln-u-display-flex ln-u-flex-wrap ln-u-text-align-center'>{tiles()}</div>\n  );\n};\n\nTileSelector.defaultProps = {\n  onClick: null,\n  selectedTile: '',\n  data: []\n};\n\nconst tile = PropTypes.shape({\n  value: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  selectable: PropTypes.bool\n});\n\nTileSelector.propTypes = {\n  onClick: PropTypes.func,\n  selectedTile: PropTypes.string,\n  data: PropTypes.arrayOf(tile)\n};\nexport default TileSelector;\n","export { default } from './TileSelector';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Select = (props) => {\n  const {\n    name, label, required, disabled, placeholder, options, value: selectedValue, onSelect\n  } = props;\n\n  const handleChange = (e) => {\n    if (onSelect) {\n      onSelect(e.target.value);\n    }\n  };\n  const renderLabel = () => (\n    <label data-testid='label' htmlFor={name} className='ln-c-label'>\n      {label}\n      {required && (\n        <span\n          data-testid='required-indicator'\n          className='ln-c-label__info'\n          aria-hidden='true'\n        >\n          *\n        </span>\n      )}\n    </label>\n  );\n  const renderPlaceholder = () => <option data-testid='placeholder' value='' disabled>{placeholder}</option>;\n  const renderOptions = () => options.map(({ value, text, selectable = true }) => (\n    <option\n      key={value}\n      data-testid='option'\n      value={value}\n      disabled={!selectable}\n    >\n      {text}\n    </option>\n  ));\n  const renderSelect = () => (\n    <select\n      id={name}\n      data-testid='select'\n      name={name}\n      required={required}\n      value={selectedValue || ''}\n      disabled={disabled}\n      onChange={handleChange}\n      className='ln-c-select'\n    >\n      {renderPlaceholder()}\n      {renderOptions()}\n    </select>\n  );\n\n  return (\n    <div className='ln-c-form-group ln-u-push-bottom'>\n      {renderLabel()}\n      {renderSelect()}\n    </div>\n  );\n};\n\nSelect.defaultProps = {\n  name: '',\n  label: '',\n  required: false,\n  disabled: false,\n  placeholder: 'Please select',\n  value: '',\n  options: [],\n  onSelect: null\n};\n\nconst option = PropTypes.shape({\n  value: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  selectable: PropTypes.bool\n});\n\nSelect.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  required: PropTypes.bool,\n  disabled: PropTypes.bool,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  options: PropTypes.arrayOf(option),\n  onSelect: PropTypes.func\n};\n\nexport default Select;\n","export { default } from './Select';\n"],"sourceRoot":""}