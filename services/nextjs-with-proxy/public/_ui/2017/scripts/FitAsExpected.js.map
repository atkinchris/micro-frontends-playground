{"version":3,"sources":["webpack:///./scripts/components/FitAsExpected/FitAsExpected.connected.js","webpack:///./scripts/components/FitAsExpected/FitAsExpected.container.js","webpack:///./scripts/components/FitAsExpected/FitAsExpected.presentational.js","webpack:///./scripts/components/FitAsExpected/FitAsExpected.proptypes.js","webpack:///./scripts/components/FitAsExpected/FitAsExpectedPopup.presentational.js","webpack:///./scripts/components/FitAsExpected/ProgressBar.component.js","webpack:///./scripts/components/FitAsExpected/ProgressBarFiller.component.js","webpack:///./scripts/components/FitAsExpected/index.js","webpack:///./scripts/components/Lozenge/Lozenge.component.js","webpack:///./scripts/mountPoints/fitAsExpected/ProvidedFitAsExpected.js","webpack:///./scripts/mountPoints/redux.proptypes.js"],"names":["mapStateToProps","fitAsExpected","fitConsensusStats","fitConsensus","mapDispatchToProps","dispatch","productCode","requestBazaarVoiceData","type","REQUEST_BAZAAR_VOICE_DATA","payload","ConnectedFitAsExpected","connect","FitAsExpected","props","useState","showPopup","setShowPopup","React","useEffect","percentage","tealiumUtil","trigger","data","selectedOption","description","handleOpen","event","preventDefault","handleClose","lozengeProps","openToolTipPopUp","popupProps","closeToolTipPopUp","thereIsConsensus","propTypes","PropTypes","string","isRequired","arrayOf","fitConsensusStatPropType","fitConsensusPropType","func","FitAsExpectedPresentational","config","fitAsExpectedRender","paragraph","sentenceBefore","sentenceAfter","shape","number","range","item","total","FitAsExpectedPopupPresentational","length","header","map","ProgressBar","label","ProgressBarFiller","styles","filler","maxWidth","Lozenge","ProvidedFitAsExpected","store","reduxStoreShape","defaultProps","subscribe","getState"],"mappings":"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","file":"FitAsExpected.js","sourcesContent":["import { connect } from 'react-redux';\n\nimport FitAsExpected from './FitAsExpected.container';\nimport { REQUEST_BAZAAR_VOICE_DATA } from '../../actions/bazaarVoiceActions';\n\nconst mapStateToProps = ({ fitAsExpected: { fitConsensusStats, fitConsensus } }) => ({\n  fitConsensusStats,\n  fitConsensus\n});\n\nconst mapDispatchToProps = (dispatch, { productCode }) => ({\n  requestBazaarVoiceData: () => dispatch({\n    type: REQUEST_BAZAAR_VOICE_DATA,\n    payload: { productCode }\n  })\n});\n\nconst ConnectedFitAsExpected = connect(mapStateToProps, mapDispatchToProps)(FitAsExpected);\n\nexport default ConnectedFitAsExpected;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport FitAsExpectedPopupPresentational from './FitAsExpectedPopup.presentational';\nimport tealiumUtil from '../metrics/tealium';\nimport FitAsExpectedPresentational from './FitAsExpected.presentational';\nimport { fitConsensusPropType, fitConsensusStatPropType } from './FitAsExpected.proptypes';\n\nconst FitAsExpected = (props) => {\n  const {\n    productCode,\n    requestBazaarVoiceData,\n    fitConsensusStats,\n    fitConsensus\n  } = props;\n\n  const [showPopup, setShowPopup] = useState(false);\n\n  // 1. need to use React.useEffect rather than import useEffect directly so that it is mockable in tests\n  // 2. the constant dependency [] means this will only run once\n  React.useEffect(() => {\n    requestBazaarVoiceData(productCode);\n  }, []);\n\n  // need to use React.useEffect rather than import useEffect directly so that it is mockable in tests\n  React.useEffect(\n    () => {\n      // Once fitConsensus.percentage changes to a non-null value it should never change\n      if (fitConsensus.percentage !== null) {\n        tealiumUtil.trigger({\n          type: 'sizeFit',\n          data: {\n            data: fitConsensusStats,\n            fitAsExpected: fitConsensus.percentage,\n            selectedOption: fitConsensus.description\n          }\n        });\n      }\n    },\n    [fitConsensus.percentage]\n  );\n\n  const handleOpen = (event) => {\n    event.preventDefault();\n    setShowPopup(true);\n    tealiumUtil.trigger({ type: 'sizeFitPopUp', data: true });\n  };\n\n  const handleClose = (event) => {\n    event.preventDefault();\n    setShowPopup(false);\n  };\n\n  const lozengeProps = { openToolTipPopUp: handleOpen, fitConsensus };\n  const popupProps = {\n    closeToolTipPopUp: handleClose,\n    fitConsensusStats,\n    fitConsensus\n  };\n\n  const thereIsConsensus = fitConsensus.percentage !== null;\n  if (thereIsConsensus) {\n    return (\n      <div className='tu-c-fit-as-expected tu-c-fit-as-expected__tu-main'>\n        {showPopup && <FitAsExpectedPopupPresentational {...popupProps} />}\n        <FitAsExpectedPresentational {...lozengeProps} />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nFitAsExpected.propTypes = {\n  productCode: PropTypes.string.isRequired,\n  fitConsensusStats: PropTypes.arrayOf(fitConsensusStatPropType).isRequired,\n  fitConsensus: fitConsensusPropType.isRequired,\n  requestBazaarVoiceData: PropTypes.func.isRequired\n};\n\nexport default FitAsExpected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport config from '../../config/fitAsExpected';\nimport Lozenge from '../Lozenge/Lozenge.component';\nimport { fitConsensusPropType } from './FitAsExpected.proptypes';\n\nconst FitAsExpectedPresentational = ({\n  fitConsensus: { percentage, description },\n  openToolTipPopUp\n}) => (\n  <div className='tu-c-fit-as-expected__tu-u-lozenge-link ln-u-push-top'>\n    <span\n      id='text'\n      onClick={openToolTipPopUp}\n      className='ln-u-h6 ln-c-card'\n    >\n      <Lozenge\n        sentenceBefore={config.fitAsExpectedRender.paragraph(percentage, description).sentenceBefore}\n        sentenceAfter={config.fitAsExpectedRender.paragraph(percentage, description).sentenceAfter}\n      />\n    </span>\n  </div>\n);\n\nFitAsExpectedPresentational.propTypes = {\n  fitConsensus: fitConsensusPropType.isRequired,\n  openToolTipPopUp: PropTypes.func.isRequired\n};\n\nexport default FitAsExpectedPresentational;\n","import PropTypes from 'prop-types';\n\nconst fitConsensusPropType = PropTypes.shape({\n  percentage: PropTypes.number,\n  description: PropTypes.string\n});\n\nconst fitConsensusStatPropType = PropTypes.shape({\n  range: PropTypes.number,\n  item: PropTypes.string,\n  total: PropTypes.number,\n  percentage: PropTypes.number\n});\n\nexport {\n  fitConsensusPropType,\n  fitConsensusStatPropType\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProgressBar from './ProgressBar.component';\nimport config from '../../config/fitAsExpected';\nimport Icon from '../paymentDetails/presentational/Icon';\nimport { fitConsensusPropType, fitConsensusStatPropType } from './FitAsExpected.proptypes';\n\nconst FitAsExpectedPopupPresentational = (props) => {\n  const {\n    fitConsensusStats,\n    fitConsensus,\n    closeToolTipPopUp\n  } = props;\n\n  if (fitConsensusStats && fitConsensusStats.length > 0) {\n    return (\n      <div className='tu-c-fit-as-expected__tu-u-popup-wrapper'>\n        <div className='tu-c-fit-as-expected__inner_wrapper'>\n          <div className='tu-c-fit-as-expected__tu-u-popup-inner'>\n            <div className='tu-c-fit-as-expected__tu-u-tool-tip-header ln-u-display-flex'>\n              <span className='tu-c-fit-as-expected__tu-u-tool-tip-header-wrapper'>\n                <h2 className='tu-c-fit-as-expected__tu-u-tool-tip-header-text ln-u-h4'>{config.fitAsExpectedRender.header}</h2>\n              </span>\n              <span className='tu-c-fit-as-expected__tu-u-close-tool-tip'>\n                <a\n                  href='#'\n                  onClick={closeToolTipPopUp}\n                >\n                  <Icon\n                    classes='tc-c-fit-as-expected__tu-icon-close-pop-up'\n                    viewBox='0 0 17 17'\n                    icon='cross'\n                    stroke='transparent'\n                  />\n                </a>\n              </span>\n            </div>\n            <p>\n              <span>{config.fitAsExpectedRender.paragraph(fitConsensus.percentage, fitConsensus.description).sentenceBefore}</span>\n              <span>\n                {config.fitAsExpectedRender.paragraph(fitConsensus.percentage, fitConsensus.description).sentenceAfter}\n              </span>\n            </p>\n            <div className='tu-c-fit-as-expected__tu-u-tool-tip-summary'>\n              {fitConsensusStats.map(\n                ({\n                  range,\n                  item,\n                  total,\n                  percentage\n                }) => (\n                  <ProgressBar percentage={percentage} key={`range-${range}`} total={total} label={item} />\n                )\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nFitAsExpectedPopupPresentational.propTypes = {\n  fitConsensusStats: PropTypes.arrayOf(fitConsensusStatPropType).isRequired,\n  fitConsensus: fitConsensusPropType.isRequired,\n  closeToolTipPopUp: PropTypes.func.isRequired,\n};\n\nexport default FitAsExpectedPopupPresentational;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProgressBarFiller from './ProgressBarFiller.component';\n\nconst ProgressBar = (props) => {\n  const { total, label, percentage } = props;\n\n  return (\n    <ul className='ln-u-display-flex tu-c-fit-as-expected__tu-u-progress-bar-wrapper ln-u-push-bottom ln-u-push-top ln-o-bare-list'>\n      <li key='progressBarLabel' className='ln-u-text-align-right tu-c-fit-as-expected__tu-u-progress-bar-graph'>\n        {label}\n      </li>\n      <li\n        key='progressBarFiller'\n        className='ln-u-bg-color-grey-light ln-u-text-align-right\n        tu-c-fit-as-expected__tu-u-progress-bar-graph tu-c-fit-as-expected__tu-u-progress-bar'\n      >\n        <ProgressBarFiller percentage={percentage} />\n      </li>\n      <li key='progressBarTotal' className='tu-c-fit-as-expected__tu-u-progress-bar-graph'>\n        {total}\n      </li>\n    </ul>\n  );\n};\n\nProgressBar.propTypes = {\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProgressBarFiller = ({ percentage }) => {\n  const styles = {\n    filler: {\n      maxWidth: `${percentage}%`,\n    },\n  };\n\n  return (\n    <div\n      className='ln-u-text-align-right tu-u-background-black tu-c-fit-as-expected__tu-u-filler'\n      style={styles.filler}\n    />\n  );\n};\n\nProgressBarFiller.propTypes = {\n  percentage: PropTypes.number.isRequired\n};\n\nexport default ProgressBarFiller;\n","import FitAsExpected from './FitAsExpected.connected';\n\nexport default FitAsExpected;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Icon from '../paymentDetails/presentational/Icon';\n\nconst Lozenge = ({ sentenceBefore, sentenceAfter }) => (\n  <div className='tu-c-fit-as-expected__tu-icon-svg-wrapper'>\n    <a href='#'>\n      <span>\n        <Icon\n          classes='ln-c-icon ln-c-icon--large tu-c-fit-as-expected__tu-icon-lozenge-svg'\n          viewBox='0 0 17 17'\n          icon='T-shirt'\n          stroke='transparent'\n        />\n      </span>\n      <span>\n        <span>{sentenceBefore}</span>\n        {' '}\n        <span className='ln-u-text-decoration-underline'>\n          &apos;\n          {sentenceAfter}\n          &apos;\n        </span>\n      </span>\n    </a>\n  </div>\n);\n\nLozenge.propTypes = {\n  sentenceBefore: PropTypes.string.isRequired,\n  sentenceAfter: PropTypes.string.isRequired\n};\n\nexport default Lozenge;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\n\nimport FitAsExpected from '../../components/FitAsExpected';\nimport { reduxStoreShape } from '../redux.proptypes';\n\nconst ProvidedFitAsExpected = ({ productCode, store }) => {\n  if (productCode) {\n    return (\n      <Provider store={store}>\n        <FitAsExpected productCode={productCode} />\n      </Provider>\n    );\n  }\n\n  // Specifically return null rather than undefined as it has better compatibility with our version of enzyme.\n  return null;\n};\n\nProvidedFitAsExpected.propTypes = {\n  productCode: PropTypes.string,\n  store: reduxStoreShape.isRequired\n};\n\nProvidedFitAsExpected.defaultProps = {\n  productCode: null\n};\n\nexport default ProvidedFitAsExpected;\n","import PropTypes from 'prop-types';\n\nconst reduxStoreShape = PropTypes.shape({\n  subscribe: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  getState: PropTypes.func.isRequired\n});\n\nexport {\n  reduxStoreShape\n};\n"],"sourceRoot":""}